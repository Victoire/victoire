// scss-lint:disable ColorVariable
$app--color: (
  'green': (
    'light': lighten(rgb(52, 177, 144), 10%),
    'default': rgb(52, 177, 144),
    'dark': darken(rgb(52, 177, 144), 10%),
  ),
  'pink': (
    'light': lighten(rgb(231, 47, 126), 10%),
    'default': rgb(231, 47, 126),
    'dark': darken(rgb(231, 47, 126), 10%),
  ),
  'orange': (
    'light': lighten(rgb(244, 162, 96), 10%),
    'default': rgb(244, 162, 96),
    'dark': darken(rgb(244, 162, 96), 10%),
  ),
  'blue': (
    'light': lighten(rgb(91, 179, 238), 10%),
    'default': rgb(91, 179, 238),
    'dark': darken(rgb(91, 179, 238), 10%),
  ),
  'white': (
    'default': rgb(255, 255, 255),
    'dark': rgb(245, 246, 247),
  ),
  'black': rgb(23, 33, 56),
  'grey': (
    'darker': rgb(47, 60, 89),
    'dark': rgb(108, 125, 142),
    'default': rgb(140, 160, 179),
    'light': rgb(187, 199, 211),
    'lighter': rgb(223, 228, 234),
  ),
);

@function color($color, $variant: null, $opacity: 1) {
  $color-group: map-get($app--color, $color);
  $color: false;

  @if type-of($color-group) == 'color' {
    $color: $color-group;
  } @elseif type-of($color-group) == 'map' {
    @if $variant and map-has-key($color-group, $variant) {
      $color: map-get($color-group, $variant);
    } @elseif map-has-key($color-group, 'default') {
      $color: map-get($color-group, 'default');
    }
  }

  @if $color {
    @return transparentize($color, 1 - $opacity);
  }

  @return false;
}
